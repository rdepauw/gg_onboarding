import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { motion, AnimatePresence } from "framer-motion";
import { useState, useEffect } from "react";

export default function GolfGooseNowBoardingFlow() {
  const TOTAL_STEPS = 9;
  const [step, setStep] = useState(1);
  const [loading, setLoading] = useState(false);
  const [showDashboard, setShowDashboard] = useState(false);

  // State
  const [selectedLevel, setSelectedLevel] = useState<string | null>(null);
  const [handicap, setHandicap] = useState<string>("");
  const [ghin, setGhin] = useState<string>("");
  const GOALS = ['Driving Accuracy','Distance','Consistency','Short Game','Putting','Mental Game'];
  const [selectedGoals, setSelectedGoals] = useState<string[]>([]);
  const MISSES = ['Slice','Hook','Fat Shots','Thin Shots','Push','Pull','Tempo'];
  const [selectedMisses, setSelectedMisses] = useState<string[]>([]);
  const [audioEnabled, setAudioEnabled] = useState<boolean>(false);
  const CLUBS = ['Driver','3 Wood','Hybrid','Irons','Wedges','Putter'];
  const [selectedClubs, setSelectedClubs] = useState<string[]>([]);

  // Helpers
  const runwayProgress = ((step - 1) / (TOTAL_STEPS - 1)) * 100;
  const toggleIn = (arr: string[], value: string, max?: number) => {
    const exists = arr.includes(value);
    if (exists) return arr.filter((v) => v !== value);
    if (max && arr.length >= max) return arr;
    return [...arr, value];
  };

  // Auto-advance from Taxiing to Final
  useEffect(() => {
    if (step === 8) {
      const timer = setTimeout(() => setStep(9), 3000);
      return () => clearTimeout(timer);
    }
  }, [step]);

  // Simulated RevenueCat integration loader
  const handleRevenueCatConnect = () => {
    setLoading(true);
    setTimeout(() => {
      setLoading(false);
      setStep(8);
    }, 2500);
  };

  return (
    showDashboard ? (
      <div className="min-h-screen bg-black text-white p-6">
        {/* Mock Dashboard */}
        <div className="max-w-md mx-auto space-y-6">
          <div className="flex items-center justify-between">
            <h1 className="text-2xl font-semibold">Golf Goose</h1>
            <div className="text-sm text-zinc-400">Welcome back üëã</div>
          </div>

          <div className="bg-gradient-to-br from-green-600/20 to-zinc-900 border border-green-600/30 rounded-2xl p-4">
            <p className="text-green-400 text-sm font-medium">Flight plan locked ‚úàÔ∏è</p>
            <p className="text-zinc-300 text-sm">Goals, misses, and clubs are set. Ready to practice smarter.</p>
          </div>

          <div className="grid grid-cols-2 gap-3">
            <Button className="bg-green-500 hover:bg-green-600 text-black rounded-xl py-3">Log a Practice</Button>
            <Button className="bg-zinc-800 hover:bg-zinc-700 text-white rounded-xl py-3">Start AI Coach</Button>
          </div>

          <div className="space-y-3">
            <h2 className="text-lg font-semibold">Quick Add</h2>
            <div className="grid grid-cols-3 gap-2 text-sm">
              <Button className="bg-zinc-800 hover:bg-zinc-700 text-white rounded-xl">Feel</Button>
              <Button className="bg-zinc-800 hover:bg-zinc-700 text-white rounded-xl">Drill</Button>
              <Button className="bg-zinc-800 hover:bg-zinc-700 text-white rounded-xl">Game</Button>
            </div>
          </div>

          <div className="space-y-3">
            <h2 className="text-lg font-semibold">Today‚Äôs Suggestions</h2>
            <div className="grid gap-3">
              <Card className="bg-zinc-900 border border-zinc-800 rounded-xl"><CardContent className="p-4"><p className="text-zinc-300 text-sm">‚è±Ô∏è Tempo Ladder ‚Äî 3x5 swings, metronome 70‚Üí80 BPM</p></CardContent></Card>
              <Card className="bg-zinc-900 border border-zinc-800 rounded-xl"><CardContent className="p-4"><p className="text-zinc-300 text-sm">üéØ Gate Drill ‚Äî 15 putts from 6ft</p></CardContent></Card>
            </div>
          </div>
        </div>
      </div>
    ) : (
      <div className="min-h-screen bg-gradient-to-b from-zinc-950 to-black text-white flex flex-col items-center justify-center p-6 space-y-8 relative overflow-hidden">
        {/* Debug toolbar for canvas navigation */}
        <div className="absolute top-2 right-2 z-50 flex gap-2 text-[11px]">
          <Button onClick={() => setStep((s) => Math.max(1, s - 1))} className="h-6 px-2 bg-zinc-800 hover:bg-zinc-700 text-white rounded">Prev</Button>
          <div className="px-2 py-1 bg-zinc-900 border border-zinc-700 rounded">Step {step}/{TOTAL_STEPS}</div>
          <Button onClick={() => setStep((s) => Math.min(TOTAL_STEPS, s + 1))} className="h-6 px-2 bg-green-600 hover:bg-green-500 text-black rounded">Next</Button>
        </div>

        {/* Ambient jet */}
        <motion.div
          key={`jet-${step}`}
          initial={{ x: -200, opacity: 0 }}
          animate={{ x: 0, opacity: 0.1 }}
          exit={{ x: 200, opacity: 0 }}
          transition={{ duration: 0.6, ease: "easeOut" }}
          className="absolute top-20 right-10 text-green-500 text-8xl opacity-10 select-none"
        >
          ‚úàÔ∏è
        </motion.div>

        {/* Runway progress */}
        <div className="fixed bottom-0 left-0 w-full h-2 bg-zinc-900/60">
          <motion.div
            className="h-2 bg-green-500"
            initial={{ width: 0 }}
            animate={{ width: `${runwayProgress}%` }}
            transition={{ duration: 0.4 }}
          />
          <div className="absolute bottom-3 left-1/2 -translate-x-1/2 text-[10px] text-zinc-500 tracking-widest uppercase">
            Now Boarding: Step {step} / {TOTAL_STEPS}
          </div>
        </div>

        <AnimatePresence mode="wait">
          {/* STEP 1 ‚Äì BOARDING PASS INTRO */}
          {step === 1 && (
            <motion.div key="slide1" initial={{ opacity: 0, y: 30 }} animate={{ opacity: 1, y: 0 }} exit={{ opacity: 0, y: -30 }} transition={{ duration: 0.6 }}>
              <Card className="relative bg-gradient-to-br from-zinc-900 to-black w-full max-w-md rounded-3xl border border-zinc-700 overflow-hidden shadow-xl">
                <div className="absolute top-0 left-0 w-full h-1 bg-green-500" />
                <div className="flex items-center justify-between px-6 py-4 border-b border-zinc-700">
                  <div className="flex items-center gap-2">
                    <span className="text-green-400 text-lg">ü™∂</span>
                    <p className="font-semibold tracking-widest text-xs uppercase text-zinc-400">Golf Goose Airways</p>
                  </div>
                  <p className="text-xs text-zinc-500">Flight GG-001</p>
                </div>
                <CardContent className="space-y-4 text-center p-6">
                  <motion.h1 className="text-3xl font-bold tracking-wide">NOW BOARDING ‚õ≥</motion.h1>
                  <p className="text-zinc-400 text-sm pt-2">Welcome aboard! Train smarter, track feels, and take flight with AI-powered insights.</p>
                  <ul className="text-zinc-300 text-sm list-disc text-left pl-6 space-y-1">
                    <li>üéØ Personalized feels and drills</li>
                    <li>üéß Real-time coaching from Goose</li>
                    <li>üìä Smarter performance tracking</li>
                  </ul>
                  <div className="mt-6 border-t border-dashed border-zinc-700 pt-4">
                    <Button onClick={() => setStep(2)} className="w-full bg-green-500 hover:bg-green-600 text-black font-semibold rounded-xl py-3 shadow-md">Scan Boarding Pass ‚Üí</Button>
                    <p className="text-xs text-zinc-500 mt-2">Tap to begin onboarding</p>
                  </div>
                </CardContent>
              </Card>
            </motion.div>
          )}

          {/* STEP 2 ‚Äì SKILL + HANDICAP + GHIN */}
          {step === 2 && (
            <motion.div key="slide2" initial={{ opacity: 0, y: 30 }} animate={{ opacity: 1, y: 0 }} exit={{ opacity: 0, y: -30 }} transition={{ duration: 0.6 }}>
              <Card className="bg-zinc-900 w-full max-w-md rounded-3xl shadow-lg p-8 border border-zinc-800">
                <CardContent className="space-y-6 text-center">
                  <motion.h2 className="text-2xl font-semibold">Flight Prep: Calibrate Your Game üéØ</motion.h2>
                  <p className="text-zinc-400 text-sm">Set your skill and handicap so Goose can personalize drills and targets.</p>

                  {/* Skill Level */}
                  <div className="space-y-3 text-left">
                    <h3 className="text-lg font-semibold">Skill Level</h3>
                    <div className="grid grid-cols-2 gap-3">
                      {['Beginner','High Handicapper','Intermediate','Advanced','Low / Scratch','Plus / Elite'].map((level) => (
                        <Button
                          key={level}
                          onClick={() => setSelectedLevel(level)}
                          className={`rounded-xl text-sm border ${selectedLevel === level ? 'bg-green-500 text-black border-green-500' : 'bg-zinc-800 text-white border-zinc-700 hover:bg-green-600'}`}
                        >
                          {level}
                        </Button>
                      ))}
                    </div>
                  </div>

                  {/* Handicap Index */}
                  <div className="space-y-3 text-left">
                    <h3 className="text-lg font-semibold">Handicap Index</h3>
                    <Input value={handicap} onChange={(e) => setHandicap(e.target.value)} placeholder="e.g. 12.5" className="bg-zinc-800 border-zinc-700 rounded-xl text-center text-white" type="number" step="0.1" inputMode="decimal" />
                    <p className="text-xs text-zinc-400">Used to calibrate baselines and goals.</p>
                  </div>

                  {/* GHIN Number */}
                  <div className="space-y-3 text-left">
                    <h3 className="text-lg font-semibold">GHIN Number <span className="text-zinc-500 text-sm">(optional)</span></h3>
                    <Input value={ghin} onChange={(e) => setGhin(e.target.value)} placeholder="e.g. 1234567" className="bg-zinc-800 border-zinc-700 rounded-xl text-center text-white" type="text" inputMode="numeric" pattern="[0-9]*" />
                    <p className="text-xs text-zinc-400">Enables verification and future auto-sync of your index.</p>
                  </div>

                  {/* Actions */}
                  <div className="flex gap-3 pt-2">
                    <Button onClick={() => setStep(1)} className="flex-1 bg-zinc-800 hover:bg-zinc-700 text-white rounded-xl py-3">Back</Button>
                    <Button onClick={() => setStep(3)} disabled={!selectedLevel || handicap === ''} className="flex-1 bg-green-500 hover:bg-green-600 text-black font-semibold rounded-xl py-3 disabled:opacity-60 disabled:cursor-not-allowed">Continue ‚Üí</Button>
                  </div>

                  {/* Helper card */}
                  <div className="bg-zinc-800 border border-zinc-700 rounded-xl p-4 text-left mt-2">
                    <p className="text-sm font-semibold mb-1 text-green-400">üí° Why we ask</p>
                    <ul className="text-xs text-zinc-300 list-disc pl-4 space-y-1">
                      <li><span className="font-medium">Skill level</span> sets coaching tone and drill difficulty.</li>
                      <li><span className="font-medium">Handicap</span> calibrates targets and progress charts.</li>
                      <li><span className="font-medium">GHIN</span> can auto-sync your official index (optional).</li>
                    </ul>
                  </div>
                </CardContent>
              </Card>
            </motion.div>
          )}

          {/* STEP 3 ‚Äì GOALS */}
          {step === 3 && (
            <motion.div key="slide3" initial={{ opacity: 0, y: 30 }} animate={{ opacity: 1, y: 0 }} exit={{ opacity: 0, y: -30 }} transition={{ duration: 0.6 }}>
              <Card className="bg-zinc-900 w-full max-w-md rounded-3xl shadow-lg p-8 border border-zinc-800">
                <CardContent className="space-y-6 text-center">
                  <h2 className="text-2xl font-semibold">Define Your Mission üèÜ</h2>
                  <p className="text-zinc-400 text-sm">Pick up to 3 goals for this season.</p>
                  <div className="grid grid-cols-2 gap-3">
                    {GOALS.map((goal) => (
                      <Button
                        key={goal}
                        onClick={() => setSelectedGoals((prev) => toggleIn(prev, goal, 3))}
                        className={`rounded-xl text-sm border ${selectedGoals.includes(goal) ? 'bg-green-500 text-black border-green-500' : 'bg-zinc-800 text-white border-zinc-700 hover:bg-green-600'}`}
                      >
                        {goal}
                      </Button>
                    ))}
                  </div>
                  <div className="flex gap-3 pt-2">
                    <Button onClick={() => setStep(2)} className="flex-1 bg-zinc-800 hover:bg-zinc-700 text-white rounded-xl py-3">Back</Button>
                    <Button onClick={() => setStep(4)} disabled={selectedGoals.length === 0} className="flex-1 bg-green-500 hover:bg-green-600 text-black font-semibold rounded-xl py-3 disabled:opacity-60 disabled:cursor-not-allowed">Next ‚Üí</Button>
                  </div>
                </CardContent>
              </Card>
            </motion.div>
          )}

          {/* STEP 4 ‚Äì MISSES */}
          {step === 4 && (
            <motion.div key="slide4" initial={{ opacity: 0, y: 30 }} animate={{ opacity: 1, y: 0 }} exit={{ opacity: 0, y: -30 }} transition={{ duration: 0.6 }}>
              <Card className="bg-zinc-900 w-full max-w-md rounded-3xl shadow-lg p-8 border border-zinc-800">
                <CardContent className="space-y-6 text-center">
                  <h2 className="text-2xl font-semibold">Know Your Misses üéØ</h2>
                  <p className="text-zinc-400 text-sm">Choose the patterns you fight most. We‚Äôll preload counter-drills.</p>
                  <div className="grid grid-cols-2 gap-3">
                    {MISSES.map((miss) => (
                      <Button
                        key={miss}
                        onClick={() => setSelectedMisses((prev) => toggleIn(prev, miss, 3))}
                        className={`rounded-xl text-sm border ${selectedMisses.includes(miss) ? 'bg-green-500 text-black border-green-500' : 'bg-zinc-800 text-white border-zinc-700 hover:bg-green-600'}`}
                      >
                        {miss}
                      </Button>
                    ))}
                  </div>
                  <div className="flex gap-3 pt-2">
                    <Button onClick={() => setStep(3)} className="flex-1 bg-zinc-800 hover:bg-zinc-700 text-white rounded-xl py-3">Back</Button>
                    <Button onClick={() => setStep(5)} disabled={selectedMisses.length === 0} className="flex-1 bg-green-500 hover:bg-green-600 text-black font-semibold rounded-xl py-3 disabled:opacity-60 disabled:cursor-not-allowed">Next ‚Üí</Button>
                  </div>
                </CardContent>
              </Card>
            </motion.div>
          )}

          {/* STEP 5 ‚Äì AUDIO & AI CHAT INTRO */}
          {step === 5 && (
            <motion.div key="slide5" initial={{ opacity: 0, y: 30 }} animate={{ opacity: 1, y: 0 }} exit={{ opacity: 0, y: -30 }} transition={{ duration: 0.6 }}>
              <Card className="bg-zinc-900 w-full max-w-md rounded-3xl shadow-lg p-8 border border-zinc-800">
                <CardContent className="space-y-6 text-center">
                  <h2 className="text-2xl font-semibold">Meet Goose üéôÔ∏è</h2>
                  <p className="text-zinc-400 text-sm">Enable mic & speaker to talk with Goose and preview the AI chat experience.</p>
                  <div className="bg-zinc-800 p-4 rounded-xl border border-zinc-700 text-left text-sm">
                    <p className="text-green-400 font-semibold mb-1">üß† Sample Chat</p>
                    <p className="text-zinc-300 italic">Goose: ‚ÄúI noticed your tempo tends to quicken under pressure. Want to try a rhythm drill next?‚Äù</p>
                  </div>
                  <div className="flex gap-3 pt-2">
                    <Button onClick={() => { setAudioEnabled(true); setStep(6); }} className="flex-1 bg-green-500 hover:bg-green-600 text-black font-semibold rounded-xl py-3">Enable Mic & Speaker</Button>
                    <Button onClick={() => setStep(6)} className="flex-1 bg-zinc-800 hover:bg-zinc-700 text-white rounded-xl py-3">Skip for Now</Button>
                  </div>
                </CardContent>
              </Card>
            </motion.div>
          )}

          {/* STEP 6 ‚Äì CLUB SETUP */}
          {step === 6 && (
            <motion.div key="slide6" initial={{ opacity: 0, y: 30 }} animate={{ opacity: 1, y: 0 }} exit={{ opacity: 0, y: -30 }} transition={{ duration: 0.6 }}>
              <Card className="bg-zinc-900 w-full max-w-md rounded-3xl shadow-lg p-8 border border-zinc-800">
                <CardContent className="space-y-6 text-center">
                  <h2 className="text-2xl font-semibold">Pre-Flight Check: Your Clubs üèåÔ∏è‚Äç‚ôÇÔ∏è</h2>
                  <p className="text-zinc-400 text-sm">Pick what you practice with most.</p>
                  <div className="grid grid-cols-3 gap-3">
                    {CLUBS.map((club) => (
                      <Button
                        key={club}
                        onClick={() => setSelectedClubs((prev) => toggleIn(prev, club))}
                        className={`rounded-xl text-sm border ${selectedClubs.includes(club) ? 'bg-green-500 text-black border-green-500' : 'bg-zinc-800 text-white border-zinc-700 hover:bg-green-600'}`}
                      >
                        {club}
                      </Button>
                    ))}
                  </div>
                  <div className="flex gap-3 pt-2">
                    <Button onClick={() => setStep(5)} className="flex-1 bg-zinc-800 hover:bg-zinc-700 text-white rounded-xl py-3">Back</Button>
                    <Button onClick={() => setStep(7)} disabled={selectedClubs.length === 0} className="flex-1 bg-green-500 hover:bg-green-600 text-black font-semibold rounded-xl py-3 disabled:opacity-60 disabled:cursor-not-allowed">Continue ‚Üí</Button>
                  </div>
                </CardContent>
              </Card>
            </motion.div>
          )}

          {/* STEP 7 ‚Äì RevenueCat Integration */}
          {step === 7 && (
            <motion.div key="slide7" initial={{ opacity: 0, y: 30 }} animate={{ opacity: 1, y: 0 }} exit={{ opacity: 0, y: -30 }} transition={{ duration: 0.6 }}>
              <Card className="bg-zinc-900 w-full max-w-md rounded-3xl shadow-lg p-8 border border-zinc-800 text-center relative overflow-hidden">
                <CardContent className="space-y-6">
                  <h2 className="text-2xl font-semibold">Activate Your Membership ü™ô</h2>
                  <p className="text-zinc-400 text-sm">Connect your account to unlock full AI coaching and premium drills via our secure partner, RevenueCat.</p>

                  <div className="bg-zinc-800 border border-zinc-700 rounded-xl p-4 text-left">
                    <p className="text-green-400 font-semibold mb-1">Golf Goose Premium includes:</p>
                    <ul className="text-xs text-zinc-300 list-disc pl-4 space-y-1">
                      <li>Unlimited AI chat feedback</li>
                      <li>Voice recap history</li>
                      <li>Advanced drill library access</li>
                    </ul>
                  </div>

                  {!loading ? (
                    <div className="flex flex-col gap-3">
                      <Button onClick={handleRevenueCatConnect} className="bg-green-500 hover:bg-green-600 text-black font-semibold rounded-xl py-3">Connect RevenueCat ‚Üí</Button>
                      <Button onClick={() => setStep(8)} className="bg-zinc-800 hover:bg-zinc-700 text-white rounded-xl py-3">Skip for Now</Button>
                    </div>
                  ) : (
                    <div className="flex flex-col items-center gap-3 py-4">
                      <motion.div
                        animate={{ rotate: 360 }}
                        transition={{ repeat: Infinity, duration: 1.5, ease: "linear" }}
                        className="w-12 h-12 border-4 border-green-500 border-t-transparent rounded-full"
                      />
                      <p className="text-sm text-zinc-400">Connecting to RevenueCat...</p>
                    </div>
                  )}
                </CardContent>
              </Card>
            </motion.div>
          )}

          {/* STEP 8 ‚Äì TAXIING */}
          {step === 8 && (
            <motion.div key="slide8" initial={{ opacity: 0, y: 30 }} animate={{ opacity: 1, y: 0 }} exit={{ opacity: 0, y: -30 }} transition={{ duration: 0.6 }}>
              <Card className="bg-zinc-900 w-full max-w-md rounded-3xl shadow-lg p-8 border border-zinc-800 text-center relative overflow-hidden">
                <CardContent className="space-y-6">
                  <h2 className="text-2xl font-semibold">Taxiing for Takeoff ‚úàÔ∏è</h2>
                  <p className="text-zinc-400 text-sm">Customizing your flight plan‚Ä¶ syncing preferences, goals, and clubs.</p>
                  <div className="relative w-full h-2 bg-zinc-800 rounded-full overflow-hidden">
                    <motion.div className="absolute h-2 w-full bg-green-500 origin-left" initial={{ scaleX: 0 }} animate={{ scaleX: 1 }} transition={{ duration: 3, ease: "easeInOut" }} />
                    <motion.div className="absolute inset-0 flex justify-around">
                      {[...Array(6)].map((_, i) => (
                        <motion.div key={i} className="w-1 h-2 bg-black/50" animate={{ opacity: [0.2, 0.8, 0.2] }} transition={{ duration: 1.5, repeat: Infinity, delay: i * 0.2 }} />
                      ))}
                    </motion.div>
                  </div>
                  <p className="text-xs text-zinc-500">This should only take a few seconds.</p>
                </CardContent>
              </Card>
            </motion.div>
          )}

          {/* STEP 9 ‚Äì FINAL */}
          {step === 9 && (
            <motion.div key="slide9" initial={{ opacity: 0, y: 30 }} animate={{ opacity: 1, y: 0 }} exit={{ opacity: 0, y: -30 }} transition={{ duration: 0.6 }}>
              <Card className="bg-zinc-900 w-full max-w-md rounded-3xl shadow-lg p-8 border border-zinc-800 text-center relative overflow-hidden">
                <div className="absolute top-4 left-0 right-0 flex justify-center">
                  <div className="bg-green-500 text-black text-xs font-bold uppercase tracking-widest py-1 px-4 rounded-full shadow">‚úÖ Boarding Complete</div>
                </div>
                <CardContent className="space-y-6 pt-10">
                  <h2 className="text-2xl font-semibold">You‚Äôre Cleared for Takeoff ‚úàÔ∏è</h2>
                  <p className="text-zinc-400 text-sm">You‚Äôre all set! Goose is ready to help you practice smarter, play better, and have more fun on the course.</p>
                  <Button onClick={() => setShowDashboard(true)} className="w-full bg-green-500 hover:bg-green-600 text-black font-semibold rounded-xl py-3">Start Practicing ‚Üí</Button>
                </CardContent>
              </Card>
            </motion.div>
          )}
        </AnimatePresence>
      </div>
    )
  );
}
